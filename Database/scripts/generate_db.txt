-- Generated by Oracle SQL Developer Data Modeler 19.4.0.350.1424
--   at:        2020-12-13 15:12:52 CET
--   site:      SQL Server 2012
--   type:      SQL Server 2012



CREATE TABLE AccomodationResources 
    (
     resource_name NVARCHAR NOT NULL 
    )
GO

ALTER TABLE AccomodationResources ADD CONSTRAINT AccomodationResources_PK PRIMARY KEY CLUSTERED (resource_name)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
GO

CREATE TABLE Bookings 
    (
     booking_id INTEGER NOT NULL , 
     Lodges_lodge_id INTEGER NOT NULL , 
     "check-in_date" DATETIME NOT NULL , 
     "check-out_date" DATETIME NOT NULL 
    )
GO

ALTER TABLE Bookings ADD CONSTRAINT Bookings_PK PRIMARY KEY CLUSTERED (booking_id)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
GO

CREATE TABLE Invoices 
    (
     Bookings_booking_id INTEGER NOT NULL , 
     invoice_id INTEGER NOT NULL 
    )
GO

ALTER TABLE Invoices ADD CONSTRAINT Invoices_PK PRIMARY KEY CLUSTERED (invoice_id)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
GO

CREATE TABLE Lodge_Resources 
    (
     Lodges_lodge_id INTEGER NOT NULL , 
     AccomodationResources_resource_name NVARCHAR NOT NULL 
    )
GO

ALTER TABLE Lodge_Resources ADD CONSTRAINT Lodge_Resources_PK PRIMARY KEY CLUSTERED (Lodges_lodge_id, AccomodationResources_resource_name)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
GO

CREATE TABLE LodgeFavorites 
    (
     Users_user_id INTEGER NOT NULL , 
     Lodges_lodge_id INTEGER NOT NULL 
    )
GO

CREATE TABLE LodgeImages 
    (
     Lodges_lodge_id INTEGER NOT NULL , 
     image_path NVARCHAR (100) NOT NULL 
    )
GO

CREATE TABLE LodgeReview 
    (
     comment_id INTEGER NOT NULL , 
     Lodges_lodge_id INTEGER NOT NULL , 
     Users_user_id INTEGER NOT NULL , 
     rating DECIMAL (3,1) NOT NULL 
    )
GO

ALTER TABLE LodgeReview ADD CONSTRAINT LodgeReview_PK PRIMARY KEY CLUSTERED (comment_id)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
GO

CREATE TABLE Lodges 
    (
     lodge_id INTEGER NOT NULL , 
     name NVARCHAR (50) NOT NULL , 
     LodgeTypes_type_id INTEGER NOT NULL , 
     surface INTEGER , 
     price_per_night DECIMAL (5,2) 
    )
GO

ALTER TABLE Lodges ADD CONSTRAINT Lodges_PK PRIMARY KEY CLUSTERED (lodge_id)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
GO

CREATE TABLE LodgeTypes 
    (
     type_id INTEGER NOT NULL , 
     type_name NVARCHAR , 
     description TEXT 
    )
GO

ALTER TABLE LodgeTypes ADD CONSTRAINT LodgeTypes_PK PRIMARY KEY CLUSTERED (type_id)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
GO

CREATE TABLE Users 
    (
     user_id INTEGER NOT NULL , 
     name NVARCHAR NOT NULL 
    )
GO

ALTER TABLE Users ADD CONSTRAINT Users_PK PRIMARY KEY CLUSTERED (user_id)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
GO

ALTER TABLE Bookings 
    ADD CONSTRAINT Bookings_Lodges_FK FOREIGN KEY 
    ( 
     Lodges_lodge_id
    ) 
    REFERENCES Lodges 
    ( 
     lodge_id 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO

ALTER TABLE Invoices 
    ADD CONSTRAINT Invoices_Bookings_FK FOREIGN KEY 
    ( 
     Bookings_booking_id
    ) 
    REFERENCES Bookings 
    ( 
     booking_id 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO

ALTER TABLE Lodge_Resources 
    ADD CONSTRAINT Lodge_Resources_AccomodationResources_FK FOREIGN KEY 
    ( 
     AccomodationResources_resource_name
    ) 
    REFERENCES AccomodationResources 
    ( 
     resource_name 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO

ALTER TABLE Lodge_Resources 
    ADD CONSTRAINT Lodge_Resources_Lodges_FK FOREIGN KEY 
    ( 
     Lodges_lodge_id
    ) 
    REFERENCES Lodges 
    ( 
     lodge_id 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO

ALTER TABLE LodgeFavorites 
    ADD CONSTRAINT LodgeFavorites_Lodges_FK FOREIGN KEY 
    ( 
     Lodges_lodge_id
    ) 
    REFERENCES Lodges 
    ( 
     lodge_id 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO

ALTER TABLE LodgeFavorites 
    ADD CONSTRAINT LodgeFavorites_Users_FK FOREIGN KEY 
    ( 
     Users_user_id
    ) 
    REFERENCES Users 
    ( 
     user_id 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO

ALTER TABLE LodgeImages 
    ADD CONSTRAINT LodgeImages_Lodges_FK FOREIGN KEY 
    ( 
     Lodges_lodge_id
    ) 
    REFERENCES Lodges 
    ( 
     lodge_id 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO

ALTER TABLE LodgeReview 
    ADD CONSTRAINT LodgeReview_Lodges_FK FOREIGN KEY 
    ( 
     Lodges_lodge_id
    ) 
    REFERENCES Lodges 
    ( 
     lodge_id 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO

ALTER TABLE LodgeReview 
    ADD CONSTRAINT LodgeReview_Users_FK FOREIGN KEY 
    ( 
     Users_user_id
    ) 
    REFERENCES Users 
    ( 
     user_id 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO

ALTER TABLE Lodges 
    ADD CONSTRAINT Lodges_LodgeTypes_FK FOREIGN KEY 
    ( 
     LodgeTypes_type_id
    ) 
    REFERENCES LodgeTypes 
    ( 
     type_id 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            10
-- CREATE INDEX                             0
-- ALTER TABLE                             18
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE DATABASE                          0
-- CREATE DEFAULT                           0
-- CREATE INDEX ON VIEW                     0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE ROLE                              0
-- CREATE RULE                              0
-- CREATE SCHEMA                            0
-- CREATE SEQUENCE                          0
-- CREATE PARTITION FUNCTION                0
-- CREATE PARTITION SCHEME                  0
-- 
-- DROP DATABASE                            0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
